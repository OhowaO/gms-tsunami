application {
  config {
    baseName GMS,
    applicationType monolith,
    authenticationType oauth2,
    packageName com.gms.tsunami,
    prodDatabaseType postgresql,
    cacheProvider ehcache,
    buildTool maven,
    clientFramework react,
    testFrameworks [protractor]
  }
  entities *
}

/* Serializable */
entity BaseEntity{
	ID Long unique required
}

enum Gender{
	MALE, FEMALE, OTHER
}

enum Countries{
	KENYA, OTHER
}

enum IDType{
	NationalID, Passport, ResidencePermit, DrivingLicense
    SchoolID
}

enum InviteStatus{
	PENDING, ACCEPTED, EXPIRED, CANCELLED
}

enum ResidentialPropertyType{
	HOUSE, APARTMENTS
}

entity User{
	userID Long required
	firstNames String required
    lastName String required
    gender Gender required
    emailAdress String required
    telephoneNumber String required
    dateOfBirth Instant required
}

entity IdentificationDocument{
	userID Long required
	idType IDType required
	uniqueDocumentID String unique required
    dateOfIssue Instant required
    issueingCountry Countries required
    dateOfExpiry Instant
    photo1 Blob required
    photo2 Blob
    verified Boolean
}

entity Tenant{
	userID Long required
}

entity Invite{
	host String required
    guest String required
    validFrom Instant required
    validTo Instant required
    inviteStatus InviteStatus required
}

entity InviteData{
	start Instant
    stop Instant
    propertyType ResidentialPropertyType required
    houseNumber String required
    block String
    apartmentName String
    streetName String required
}

entity ResidentialProperty{
	residentialPropertyID Long required
	type ResidentialPropertyType required
	ownerID Long required
    houseNumber String required
    block String
    apartmentName String 
	streetName String required
    city String required
    country Countries required
}

entity Owner{
	userID Long required
}

relationship OneToMany{
	User{userID} to IdentificationDocument{userID}
}

relationship ManyToOne{
	IdentificationDocument{userID} to User{userID}
    Tenant{userID} to ResidentialProperty{residentialPropertyID}
}

relationship OneToOne{
    BaseEntity{ID} to User{userID}
	Tenant{userID} to User{userID}
	Owner{userID} to User{userID}
    Invite{host} to Tenant{userID}
    Invite{guest} to User{userID}
    InviteData{start} to Invite{validFrom}
    InviteData{stop} to Invite{validTo}
    InviteData{houseNumber} to Invite{residentialProperty(houseNumber)}
    InviteData{block} to Invite{residentialProperty(block)}
    InviteData{apartmentName} to Invite{residentialProperty(apartmentName)}
    InviteData{streetName} to Invite{residentialProperty(streetName)}
}

relationship ManyToMany{
	ResidentialProperty{ownerID} to Owner{ownerID}
}

paginate Invites, InviteData with pagination
service * with serviceClass except InviteStatus, BaseEntity, ResidentialPropertyType, Gender, IDType




